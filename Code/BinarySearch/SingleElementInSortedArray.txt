class Solution {
    public int singleNonDuplicate(int[] arr) {
       int n=arr.length;
       if(n==1){           // if arr length is 1 then return the only element present in it
           return arr[0];
       }
       if(arr[0]!=arr[1]){
           return arr[0];
       }
       if(arr[n-1]!=arr[n-2]){
           return arr[n-1];
       }
       int low=1;       //trim down the search space to the respective values
       int high=n-2;
       while(low<=high){
          int mid=(low+high)/2;
        if(arr[mid]!=arr[mid-1] && arr[mid]!=arr[mid+1]){
            return arr[mid];
        }
        //standing in the left part
        if ((mid%2==1 && arr[mid]==arr[mid-1])|| (mid%2==0 && arr[mid]==arr[mid+1])){
            low=mid+1;   //eliminate the left
        }else{           //standing in the right part
            high=mid-1;  //eliminate the right
        }
     
       }
       return -1;
       
    }

}