class Solution {
    public int[] searchRange(int[] nums, int target) {
        int n=nums.length;
        int lb = lowerBound(nums,target);
        if(lb==n || nums[lb]!=target){
            return new int[]{-1,-1};
        }
        return new int[]{lb,upperBound(nums,target)-1};
    }
    public int lowerBound(int[]arr,int x){
        int low=0;
        int high=arr.length-1;
        int ans=0;
        while(low<=high){
            int mid=(low+high)/2;
            if(arr[mid]>=x){
               ans=mid;
               high=mid-1;
            }else{
                low=mid+1;
            }
        }
        return ans;
    }
     public int upperBound(int[]arr,int x){
        int low=0;
        int high=arr.length-1;
        int ans=0;
        while(low<=high){
            int mid=(low+high)/2;
            if(arr[mid]>x){
               ans=mid;
               high=mid-1;
            }else{
                low=mid+1;
            }
        }
        return ans;
    }

}
    
